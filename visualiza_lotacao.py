import streamlit as st
import pandas as pd
import plotly.express as px

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(
    page_title="Cargos por Lota√ß√£o (Julho de 2025)",
    page_icon="üìä",
    layout="wide"
)

# --- Fun√ß√µes ---

@st.cache_data
def carregar_dados(caminho_arquivo):
    """
    Carrega os dados de um arquivo CSV, com cache para otimiza√ß√£o.
    """
    try:
        df = pd.read_csv(caminho_arquivo)
        # Garante que as colunas principais n√£o tenham valores nulos que possam causar erros
        df.dropna(subset=['Lota√ß√£o', 'Cargo', 'Nome'], inplace=True)
        return df
    except FileNotFoundError:
        st.error(f"Erro: O arquivo '{caminho_arquivo}' n√£o foi encontrado. Certifique-se de que ele est√° na mesma pasta que o script.")
        return None

# --- T√≠tulo e Descri√ß√£o ---
st.title("üìä Cargos por Lota√ß√£o")
st.markdown("""
Utilize os filtros ao lado para selecionar as lota√ß√µes e respectivos cargos.
""")

# --- Carregamento dos Dados ---
# Substitua 'servidores-ativos-remuneracao-07-2025.csv' pelo nome do seu arquivo se for diferente
df = carregar_dados('servidores-ativos-remuneracao-07-2025.csv')

if df is not None:
    # --- Barra Lateral com Filtros ---
    st.sidebar.header("Filtros")

    # Obter listas √∫nicas e ordenadas para os filtros
    lista_lotacoes = sorted(df['Lota√ß√£o'].unique())
    lista_cargos = sorted(df['Cargo'].unique())

    # Filtro de Lota√ß√£o com multiselect e limite de 5
    lotacoes_selecionadas = st.sidebar.multiselect(
        "Selecione a(s) Lota√ß√£o(√µes) (m√°x. 5):",
        options=lista_lotacoes,
        default=['SERVICO TECNICO-ADMINISTRATIVO DE PIRACICABA'], # Nenhuma lota√ß√£o selecionada por padr√£o
        help="Escolha at√© 5 lota√ß√µes para comparar."
    )
    
    # Filtro de Cargo
    cargos_selecionados = st.sidebar.multiselect(
        "Selecione o(s) Cargo(s):",
        options=lista_cargos,
        default=lista_cargos,
        help="Escolha um ou mais cargos. Se nenhum for selecionado, todos ser√£o exibidos."
    )
    
    # --- L√≥gica de Exibi√ß√£o Principal e Valida√ß√£o ---
    if len(lotacoes_selecionadas) > 5:
        st.sidebar.error("Limite excedido! Selecione at√© 5 lota√ß√µes.")
        st.error("### Por favor, desmarque algumas lota√ß√µes para continuar.")
    
    elif not lotacoes_selecionadas:
        st.info("‚¨ÖÔ∏è Selecione ao menos uma lota√ß√£o na barra lateral para visualizar os dados.")

    else:
        lotacoes_a_filtrar = lotacoes_selecionadas
        
        # Se a lista de cargos estiver vazia, considera como "todos"
        if not cargos_selecionados:
            cargos_a_filtrar = lista_cargos
        else:
            cargos_a_filtrar = cargos_selecionados

        # --- Filtragem dos Dados ---
        df_filtrado = df[
            df['Lota√ß√£o'].isin(lotacoes_a_filtrar) &
            df['Cargo'].isin(cargos_a_filtrar)
        ]

        # --- Processamento e Visualiza√ß√£o ---
        if not df_filtrado.empty:
            st.header("Distribui√ß√£o de Cargos por Lota√ß√£o")

            # Agrupar dados para o gr√°fico, contando servidores e agregando nomes para o hover
            df_grafico = df_filtrado.groupby(['Lota√ß√£o', 'Cargo']).agg(
                Quantidade=('Nome', 'count'),
                Servidores=('Nome', lambda nomes: ', '.join(nomes))
            ).reset_index()

            # Criar o gr√°fico de barras com Plotly
            fig = px.bar(
                df_grafico,
                x='Lota√ß√£o',
                y='Quantidade',
                color='Cargo',
                title='Quantidade de Servidores por Cargo em cada Lota√ß√£o',
                labels={
                    'Quantidade': 'N¬∫ de Servidores',
                    'Lota√ß√£o': 'Lota√ß√£o',
                    'Cargo': 'Cargo'
                },
                hover_name='Cargo',
                hover_data={
                    'Lota√ß√£o': True,
                    'Quantidade': True,
                    'Cargo': False, # Oculta o cargo do hover data padr√£o pois j√° est√° no hover_name
                    'Servidores': True
                },
                text_auto=True,
                barmode='stack' # Empilha as barras para melhor visualiza√ß√£o
            )

            # Melhorias no layout do gr√°fico
            fig.update_layout(
                xaxis_tickangle=-45,
                xaxis={'categoryorder':'total descending'},
                legend_title_text='Cargos',
                uniformtext_minsize=8, 
                uniformtext_mode='hide'
            )
            
            # Exibir o gr√°fico
            st.plotly_chart(fig, use_container_width=True)

            # --- Exibi√ß√£o dos Dados em Tabela ---
            with st.expander("Visualizar dados filtrados em tabela"):
                st.dataframe(df_filtrado)

        else:

            st.warning("Nenhum dado encontrado para os filtros selecionados.")
